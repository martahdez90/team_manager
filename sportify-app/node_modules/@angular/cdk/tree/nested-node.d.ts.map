{"version":3,"file":"nested-node.d.ts","sources":["nested-node.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { AfterContentInit, ElementRef, IterableDiffers, OnDestroy, QueryList } from '@angular/core';\r\nimport { CdkTreeNodeOutlet } from './outlet';\r\nimport { CdkTree, CdkTreeNode } from './tree';\r\n/**\r\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\r\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\r\n * be added in the `cdkTreeNodeOutlet` in tree node template.\r\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\r\n */\r\nexport declare class CdkNestedTreeNode<T> extends CdkTreeNode<T> implements AfterContentInit, OnDestroy {\r\n    protected _elementRef: ElementRef<HTMLElement>;\r\n    protected _tree: CdkTree<T>;\r\n    protected _differs: IterableDiffers;\r\n    /** Differ used to find the changes in the data provided by the data source. */\r\n    private _dataDiffer;\r\n    /** The children data dataNodes of current node. They will be placed in `CdkTreeNodeOutlet`. */\r\n    protected _children: T[];\r\n    /** The children node placeholder. */\r\n    nodeOutlet: QueryList<CdkTreeNodeOutlet>;\r\n    constructor(_elementRef: ElementRef<HTMLElement>, _tree: CdkTree<T>, _differs: IterableDiffers);\r\n    ngAfterContentInit(): void;\r\n    ngOnDestroy(): void;\r\n    /** Add children dataNodes to the NodeOutlet */\r\n    protected updateChildrenNodes(children?: T[]): void;\r\n    /** Clear the children dataNodes. */\r\n    protected _clear(): void;\r\n    /** Gets the outlet for the current node. */\r\n    private _getNodeOutlet;\r\n}\r\n"]}