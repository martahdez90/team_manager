{"version":3,"file":"node.d.ts","sources":["node.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { TemplateRef } from '@angular/core';\r\n/** Context provided to the tree node component. */\r\nexport declare class CdkTreeNodeOutletContext<T> {\r\n    /** Data for the node. */\r\n    $implicit: T;\r\n    /** Depth of the node. */\r\n    level: number;\r\n    /** Index location of the node. */\r\n    index?: number;\r\n    /** Length of the number of total dataNodes. */\r\n    count?: number;\r\n    constructor(data: T);\r\n}\r\n/**\r\n * Data node definition for the CdkTree.\r\n * Captures the node's template and a when predicate that describes when this node should be used.\r\n */\r\nexport declare class CdkTreeNodeDef<T> {\r\n    template: TemplateRef<any>;\r\n    /**\r\n     * Function that should return true if this node template should be used for the provided node\r\n     * data and index. If left undefined, this node will be considered the default node template to\r\n     * use when no other when functions return true for the data.\r\n     * For every node, there must be at least one when function that passes or an undefined to\r\n     * default.\r\n     */\r\n    when: (index: number, nodeData: T) => boolean;\r\n    /** @docs-private */\r\n    constructor(template: TemplateRef<any>);\r\n}\r\n"]}