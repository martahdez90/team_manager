{"version":3,"file":"overlay-container.d.ts","sources":["overlay-container.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { InjectionToken, OnDestroy, Optional } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\n/** Container inside which all overlays will render. */\r\nexport declare class OverlayContainer implements OnDestroy {\r\n    /**\r\n     * @deprecated `platform` parameter to become required.\r\n     * @breaking-change 10.0.0\r\n     */\r\n    protected _platform?: Platform | undefined;\r\n    protected _containerElement: HTMLElement;\r\n    protected _document: Document;\r\n    constructor(document: any, \r\n    /**\r\n     * @deprecated `platform` parameter to become required.\r\n     * @breaking-change 10.0.0\r\n     */\r\n    _platform?: Platform | undefined);\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * This method returns the overlay container element. It will lazily\r\n     * create the element the first time  it is called to facilitate using\r\n     * the container in non-browser environments.\r\n     * @returns the container element\r\n     */\r\n    getContainerElement(): HTMLElement;\r\n    /**\r\n     * Create the overlay container element, which is simply a div\r\n     * with the 'cdk-overlay-container' class on the document body.\r\n     */\r\n    protected _createContainer(): void;\r\n}\r\n/** @docs-private @deprecated @breaking-change 8.0.0 */\r\nexport declare function OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer: OverlayContainer, _document: any): OverlayContainer;\r\n/** @docs-private @deprecated @breaking-change 8.0.0 */\r\nexport declare const OVERLAY_CONTAINER_PROVIDER: {\r\n    provide: typeof OverlayContainer;\r\n    deps: (Optional[] | InjectionToken<any>)[];\r\n    useFactory: typeof OVERLAY_CONTAINER_PROVIDER_FACTORY;\r\n};\r\n"]}