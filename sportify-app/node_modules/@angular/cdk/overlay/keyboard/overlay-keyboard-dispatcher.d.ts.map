{"version":3,"file":"overlay-keyboard-dispatcher.d.ts","sources":["overlay-keyboard-dispatcher.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { InjectionToken, OnDestroy, Optional } from '@angular/core';\r\nimport { OverlayReference } from '../overlay-reference';\r\n/**\r\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\r\n * if any. It maintains a list of attached overlays to determine best suited overlay based\r\n * on event target and order of overlay opens.\r\n */\r\nexport declare class OverlayKeyboardDispatcher implements OnDestroy {\r\n    /** Currently attached overlays in the order they were attached. */\r\n    _attachedOverlays: OverlayReference[];\r\n    private _document;\r\n    private _isAttached;\r\n    constructor(document: any);\r\n    ngOnDestroy(): void;\r\n    /** Add a new overlay to the list of attached overlay refs. */\r\n    add(overlayRef: OverlayReference): void;\r\n    /** Remove an overlay from the list of attached overlay refs. */\r\n    remove(overlayRef: OverlayReference): void;\r\n    /** Detaches the global keyboard event listener. */\r\n    private _detach;\r\n    /** Keyboard event listener that will be attached to the body. */\r\n    private _keydownListener;\r\n}\r\n/** @docs-private @deprecated @breaking-change 8.0.0 */\r\nexport declare function OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher: OverlayKeyboardDispatcher, _document: any): OverlayKeyboardDispatcher;\r\n/** @docs-private @deprecated @breaking-change 8.0.0 */\r\nexport declare const OVERLAY_KEYBOARD_DISPATCHER_PROVIDER: {\r\n    provide: typeof OverlayKeyboardDispatcher;\r\n    deps: (Optional[] | InjectionToken<any>)[];\r\n    useFactory: typeof OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY;\r\n};\r\n"]}