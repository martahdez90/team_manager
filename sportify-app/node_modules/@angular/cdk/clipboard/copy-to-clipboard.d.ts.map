{"version":3,"file":"copy-to-clipboard.d.ts","sources":["copy-to-clipboard.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { EventEmitter, NgZone, InjectionToken, OnDestroy } from '@angular/core';\r\nimport { Clipboard } from './clipboard';\r\n/** Object that can be used to configure the default options for `CdkCopyToClipboard`. */\r\nexport interface CdkCopyToClipboardConfig {\r\n    /** Default number of attempts to make when copying text to the clipboard. */\r\n    attempts?: number;\r\n}\r\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\r\nexport declare const CKD_COPY_TO_CLIPBOARD_CONFIG: InjectionToken<CdkCopyToClipboardConfig>;\r\n/**\r\n * Provides behavior for a button that when clicked copies content into user's\r\n * clipboard.\r\n */\r\nexport declare class CdkCopyToClipboard implements OnDestroy {\r\n    private _clipboard;\r\n    private _ngZone;\r\n    /** Content to be copied. */\r\n    text: string;\r\n    /**\r\n     * How many times to attempt to copy the text. This may be necessary for longer text, because\r\n     * the browser needs time to fill an intermediate textarea element and copy the content.\r\n     */\r\n    attempts: number;\r\n    /**\r\n     * Emits when some text is copied to the clipboard. The\r\n     * emitted value indicates whether copying was successful.\r\n     */\r\n    copied: EventEmitter<boolean>;\r\n    /** Copies that are currently being attempted. */\r\n    private _pending;\r\n    /** Whether the directive has been destroyed. */\r\n    private _destroyed;\r\n    /** Timeout for the current copy attempt. */\r\n    private _currentTimeout;\r\n    constructor(_clipboard: Clipboard, _ngZone: NgZone, config?: CdkCopyToClipboardConfig);\r\n    /** Copies the current text to the clipboard. */\r\n    copy(attempts?: number): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}