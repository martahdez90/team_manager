{"version":3,"file":"button.d.ts","sources":["button.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { FocusMonitor, FocusableOption, FocusOrigin } from '@angular/cdk/a11y';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\r\nimport { CanColor, CanDisable, CanDisableRipple, CanColorCtor, CanDisableCtor, CanDisableRippleCtor, MatRipple } from '@angular/material/core';\r\n/** @docs-private */\r\ndeclare class MatButtonBase {\r\n    _elementRef: ElementRef;\r\n    constructor(_elementRef: ElementRef);\r\n}\r\ndeclare const _MatButtonMixinBase: CanDisableRippleCtor & CanDisableCtor & CanColorCtor & typeof MatButtonBase;\r\n/**\r\n * Material design button.\r\n */\r\nexport declare class MatButton extends _MatButtonMixinBase implements AfterViewInit, OnDestroy, CanDisable, CanColor, CanDisableRipple, FocusableOption {\r\n    private _focusMonitor;\r\n    _animationMode: string;\r\n    /** Whether the button is round. */\r\n    readonly isRoundButton: boolean;\r\n    /** Whether the button is icon button. */\r\n    readonly isIconButton: boolean;\r\n    /** Reference to the MatRipple instance of the button. */\r\n    ripple: MatRipple;\r\n    constructor(elementRef: ElementRef, _focusMonitor: FocusMonitor, _animationMode: string);\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    /** Focuses the button. */\r\n    focus(origin?: FocusOrigin, options?: FocusOptions): void;\r\n    _getHostElement(): any;\r\n    _isRippleDisabled(): boolean;\r\n    /** Gets whether the button has one of the given attributes. */\r\n    _hasHostAttributes(...attributes: string[]): boolean;\r\n    static ngAcceptInputType_disabled: BooleanInput;\r\n    static ngAcceptInputType_disableRipple: BooleanInput;\r\n}\r\n/**\r\n * Material design anchor button.\r\n */\r\nexport declare class MatAnchor extends MatButton {\r\n    /** Tabindex of the button. */\r\n    tabIndex: number;\r\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef, animationMode: string);\r\n    _haltDisabledEvents(event: Event): void;\r\n}\r\nexport {};\r\n"]}