{"version":3,"file":"tab-header.d.ts","sources":["tab-header.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { ViewportRuler } from '@angular/cdk/scrolling';\r\nimport { AfterContentChecked, AfterContentInit, ChangeDetectorRef, ElementRef, NgZone, OnDestroy, QueryList, AfterViewInit } from '@angular/core';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { MatInkBar } from './ink-bar';\r\nimport { MatTabLabelWrapper } from './tab-label-wrapper';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { MatPaginatedTabHeader } from './paginated-tab-header';\r\n/**\r\n * Base class with all of the `MatTabHeader` functionality.\r\n * @docs-private\r\n */\r\nexport declare abstract class _MatTabHeaderBase extends MatPaginatedTabHeader implements AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {\r\n    /** Whether the ripple effect is disabled or not. */\r\n    get disableRipple(): any;\r\n    set disableRipple(value: any);\r\n    private _disableRipple;\r\n    constructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef, viewportRuler: ViewportRuler, dir: Directionality, ngZone: NgZone, platform: Platform, animationMode?: string);\r\n    protected _itemSelected(event: KeyboardEvent): void;\r\n}\r\n/**\r\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\r\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\r\n * width of the header container, then arrows will be displayed to allow the user to scroll\r\n * left and right across the header.\r\n * @docs-private\r\n */\r\nexport declare class MatTabHeader extends _MatTabHeaderBase {\r\n    _items: QueryList<MatTabLabelWrapper>;\r\n    _inkBar: MatInkBar;\r\n    _tabListContainer: ElementRef;\r\n    _tabList: ElementRef;\r\n    _nextPaginator: ElementRef<HTMLElement>;\r\n    _previousPaginator: ElementRef<HTMLElement>;\r\n    constructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef, viewportRuler: ViewportRuler, dir: Directionality, ngZone: NgZone, platform: Platform, animationMode?: string);\r\n    static ngAcceptInputType_disableRipple: BooleanInput;\r\n}\r\n"]}