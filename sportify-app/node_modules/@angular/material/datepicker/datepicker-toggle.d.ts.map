{"version":3,"file":"datepicker-toggle.d.ts","sources":["datepicker-toggle.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { AfterContentInit, ChangeDetectorRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatDatepickerIntl } from './datepicker-intl';\r\nimport { MatDatepickerBase, MatDatepickerControl } from './datepicker-base';\r\n/** Can be used to override the icon of a `matDatepickerToggle`. */\r\nexport declare class MatDatepickerToggleIcon {\r\n}\r\nexport declare class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\r\n    _intl: MatDatepickerIntl;\r\n    private _changeDetectorRef;\r\n    private _stateChanges;\r\n    /** Datepicker instance that the button will toggle. */\r\n    datepicker: MatDatepickerBase<MatDatepickerControl<any>, D>;\r\n    /** Tabindex for the toggle. */\r\n    tabIndex: number | null;\r\n    /** Whether the toggle button is disabled. */\r\n    get disabled(): boolean;\r\n    set disabled(value: boolean);\r\n    private _disabled;\r\n    /** Whether ripples on the toggle should be disabled. */\r\n    disableRipple: boolean;\r\n    /** Custom icon set by the consumer. */\r\n    _customIcon: MatDatepickerToggleIcon;\r\n    /** Underlying button element. */\r\n    _button: MatButton;\r\n    constructor(_intl: MatDatepickerIntl, _changeDetectorRef: ChangeDetectorRef, defaultTabIndex: string);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    ngAfterContentInit(): void;\r\n    _open(event: Event): void;\r\n    private _watchStateChanges;\r\n    static ngAcceptInputType_disabled: BooleanInput;\r\n}\r\n"]}