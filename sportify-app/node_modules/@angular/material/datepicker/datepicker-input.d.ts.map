{"version":3,"file":"datepicker-input.d.ts","sources":["datepicker-input.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ElementRef } from '@angular/core';\r\nimport { ValidatorFn } from '@angular/forms';\r\nimport { DateAdapter, MatDateFormats, ThemePalette } from '@angular/material/core';\r\nimport { MatFormField } from '@angular/material/form-field';\r\nimport { MatDatepicker } from './datepicker';\r\nimport { MatDatepickerInputBase, DateFilterFn } from './datepicker-input-base';\r\nimport { MatDatepickerControl } from './datepicker-base';\r\n/** @docs-private */\r\nexport declare const MAT_DATEPICKER_VALUE_ACCESSOR: any;\r\n/** @docs-private */\r\nexport declare const MAT_DATEPICKER_VALIDATORS: any;\r\n/** Directive used to connect an input to a MatDatepicker. */\r\nexport declare class MatDatepickerInput<D> extends MatDatepickerInputBase<D | null, D> implements MatDatepickerControl<D | null> {\r\n    private _formField;\r\n    /** The datepicker that this input is associated with. */\r\n    set matDatepicker(datepicker: MatDatepicker<D>);\r\n    _datepicker: MatDatepicker<D>;\r\n    /** The minimum valid date. */\r\n    get min(): D | null;\r\n    set min(value: D | null);\r\n    private _min;\r\n    /** The maximum valid date. */\r\n    get max(): D | null;\r\n    set max(value: D | null);\r\n    private _max;\r\n    /** Function that can be used to filter out dates within the datepicker. */\r\n    get dateFilter(): DateFilterFn<D | null>;\r\n    set dateFilter(value: DateFilterFn<D | null>);\r\n    private _dateFilter;\r\n    /** The combined form control validator for this input. */\r\n    protected _validator: ValidatorFn | null;\r\n    constructor(elementRef: ElementRef<HTMLInputElement>, dateAdapter: DateAdapter<D>, dateFormats: MatDateFormats, _formField: MatFormField);\r\n    /**\r\n     * Gets the element that the datepicker popup should be connected to.\r\n     * @return The element to connect the popup to.\r\n     */\r\n    getConnectedOverlayOrigin(): ElementRef;\r\n    /** Returns the palette used by the input's form field, if any. */\r\n    getThemePalette(): ThemePalette;\r\n    /** Gets the value at which the calendar should start. */\r\n    getStartValue(): D | null;\r\n    /**\r\n     * @deprecated\r\n     * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\r\n     */\r\n    getPopupConnectionElementRef(): ElementRef;\r\n    /** Opens the associated datepicker. */\r\n    protected _openPopup(): void;\r\n    protected _getValueFromModel(modelValue: D | null): D | null;\r\n    protected _assignValueToModel(value: D | null): void;\r\n    /** Gets the input's minimum date. */\r\n    _getMinDate(): D | null;\r\n    /** Gets the input's maximum date. */\r\n    _getMaxDate(): D | null;\r\n    /** Gets the input's date filtering function. */\r\n    protected _getDateFilter(): DateFilterFn<D | null>;\r\n    protected _outsideValueChanged: undefined;\r\n    static ngAcceptInputType_value: any;\r\n}\r\n"]}