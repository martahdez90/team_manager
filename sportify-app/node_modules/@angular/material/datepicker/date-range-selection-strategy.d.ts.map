{"version":3,"file":"date-range-selection-strategy.d.ts","sources":["date-range-selection-strategy.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { InjectionToken } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { DateRange } from './date-selection-model';\r\n/** Injection token used to customize the date range selection behavior. */\r\nexport declare const MAT_DATE_RANGE_SELECTION_STRATEGY: InjectionToken<MatDateRangeSelectionStrategy<any>>;\r\n/** Object that can be provided in order to customize the date range selection behavior. */\r\nexport interface MatDateRangeSelectionStrategy<D> {\r\n    /**\r\n     * Called when the user has finished selecting a value.\r\n     * @param date Date that was selected. Will be null if the user cleared the selection.\r\n     * @param currentRange Range that is currently show in the calendar.\r\n     * @param event DOM event that triggered the selection. Currently only corresponds to a `click`\r\n     *    event, but it may get expanded in the future.\r\n     */\r\n    selectionFinished(date: D | null, currentRange: DateRange<D>, event: Event): DateRange<D>;\r\n    /**\r\n     * Called when the user has activated a new date (e.g. by hovering over\r\n     * it or moving focus) and the calendar tries to display a date range.\r\n     *\r\n     * @param activeDate Date that the user has activated. Will be null if the user moved\r\n     *    focus to an element that's no a calendar cell.\r\n     * @param currentRange Range that is currently shown in the calendar.\r\n     * @param event DOM event that caused the preview to be changed. Will be either a\r\n     *    `mouseenter`/`mouseleave` or `focus`/`blur` depending on how the user is navigating.\r\n     */\r\n    createPreview(activeDate: D | null, currentRange: DateRange<D>, event: Event): DateRange<D>;\r\n}\r\n/** Provides the default date range selection behavior. */\r\nexport declare class DefaultMatCalendarRangeStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n    private _dateAdapter;\r\n    constructor(_dateAdapter: DateAdapter<D>);\r\n    selectionFinished(date: D, currentRange: DateRange<D>): DateRange<D>;\r\n    createPreview(activeDate: D | null, currentRange: DateRange<D>): DateRange<D>;\r\n}\r\n"]}