{"version":3,"file":"datepicker-intl.d.ts","sources":["datepicker-intl.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { Subject } from 'rxjs';\r\n/** Datepicker data that requires internationalization. */\r\nexport declare class MatDatepickerIntl {\r\n    /**\r\n     * Stream that emits whenever the labels here are changed. Use this to notify\r\n     * components if the labels have changed after initialization.\r\n     */\r\n    readonly changes: Subject<void>;\r\n    /** A label for the calendar popup (used by screen readers). */\r\n    calendarLabel: string;\r\n    /** A label for the button used to open the calendar popup (used by screen readers). */\r\n    openCalendarLabel: string;\r\n    /** A label for the previous month button (used by screen readers). */\r\n    prevMonthLabel: string;\r\n    /** A label for the next month button (used by screen readers). */\r\n    nextMonthLabel: string;\r\n    /** A label for the previous year button (used by screen readers). */\r\n    prevYearLabel: string;\r\n    /** A label for the next year button (used by screen readers). */\r\n    nextYearLabel: string;\r\n    /** A label for the previous multi-year button (used by screen readers). */\r\n    prevMultiYearLabel: string;\r\n    /** A label for the next multi-year button (used by screen readers). */\r\n    nextMultiYearLabel: string;\r\n    /** A label for the 'switch to month view' button (used by screen readers). */\r\n    switchToMonthViewLabel: string;\r\n    /** A label for the 'switch to year view' button (used by screen readers). */\r\n    switchToMultiYearViewLabel: string;\r\n    /** Formats a range of years. */\r\n    formatYearRange(start: string, end: string): string;\r\n}\r\n"]}