{"version":3,"file":"menu-content.d.ts","sources":["menu-content.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ApplicationRef, ChangeDetectorRef, ComponentFactoryResolver, Injector, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n/**\r\n * Menu content that will be rendered lazily once the menu is opened.\r\n */\r\nexport declare class MatMenuContent implements OnDestroy {\r\n    private _template;\r\n    private _componentFactoryResolver;\r\n    private _appRef;\r\n    private _injector;\r\n    private _viewContainerRef;\r\n    private _document;\r\n    private _changeDetectorRef?;\r\n    private _portal;\r\n    private _outlet;\r\n    /** Emits when the menu content has been attached. */\r\n    _attached: Subject<void>;\r\n    constructor(_template: TemplateRef<any>, _componentFactoryResolver: ComponentFactoryResolver, _appRef: ApplicationRef, _injector: Injector, _viewContainerRef: ViewContainerRef, _document: any, _changeDetectorRef?: ChangeDetectorRef | undefined);\r\n    /**\r\n     * Attaches the content with a particular context.\r\n     * @docs-private\r\n     */\r\n    attach(context?: any): void;\r\n    /**\r\n     * Detaches the content.\r\n     * @docs-private\r\n     */\r\n    detach(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}