{"version":3,"file":"toolbar.d.ts","sources":["toolbar.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { AfterViewInit, ElementRef, QueryList } from '@angular/core';\r\nimport { CanColor, CanColorCtor } from '@angular/material/core';\r\n/** @docs-private */\r\ndeclare class MatToolbarBase {\r\n    _elementRef: ElementRef;\r\n    constructor(_elementRef: ElementRef);\r\n}\r\ndeclare const _MatToolbarMixinBase: CanColorCtor & typeof MatToolbarBase;\r\nexport declare class MatToolbarRow {\r\n}\r\nexport declare class MatToolbar extends _MatToolbarMixinBase implements CanColor, AfterViewInit {\r\n    private _platform;\r\n    private _document;\r\n    /** Reference to all toolbar row elements that have been projected. */\r\n    _toolbarRows: QueryList<MatToolbarRow>;\r\n    constructor(elementRef: ElementRef, _platform: Platform, document?: any);\r\n    ngAfterViewInit(): void;\r\n    /**\r\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\r\n     */\r\n    private _checkToolbarMixedModes;\r\n}\r\n/**\r\n * Throws an exception when attempting to combine the different toolbar row modes.\r\n * @docs-private\r\n */\r\nexport declare function throwToolbarMixedModesError(): void;\r\nexport {};\r\n"]}